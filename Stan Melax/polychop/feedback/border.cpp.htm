<html>//
//    Enhancement  to deal with  models that
//    contain border/open edges and vertices
//
// note that this is a rather ad-hoc enhancement.
// it seems to work for a lot of situations but there
// may be some situations that can cause problems.


// in class Vertex declare 
// the IsBorder method by adding the line:

        int              IsBorder();

// Add the routine:

int Vertex::IsBorder() {
        int i,j;
        isborder=0;
        for(i=0;i<neighbor.num;i++) {
                int count=0;
                for(j=0;j<face.num;j++) {
                        if(face[j]->HasVertex(neighbor[i])) {
                                count ++;
                        }
                }
                assert(count>0);
                if(count==1) {
                        isborder=1;
                        return 1;
                }
        }
        return 0;
} 



// in the routine:
//  	ComputeEdgeCollapseCost()
// add a "border check" near the end which
// will set the curvature to 1 if u is on a border
// but v isn't on that same border:

float ComputeEdgeCollapseCost(Vertex *u,Vertex *v) {
       ... <snip> ...
     
        // the more coplanar the lower the curvature term 
        // but ignore curvature if u is on a border but v isn't
        if(u->IsBorder(); && sides.num>1) {
                curvature=1;
        }
        return edgelength * curvature;
}




