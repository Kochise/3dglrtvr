<html><head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'></head>
Source excerpt given to me by Chris Babcock (a.k.a. "VOR") for splitting
polygons for use in BSP creation.

This is simply an excerpt from his code, and he warrants that you may
or may not find this useful.  :)


----------------------------------------------------------------------------


VERTEX3 fpts[64],bpts[64];
VERTEX2 fuvs[64],buvs[64];
int f_c,b_c;

void SplitBillboard(VERTEX3 *vptr,VERTEX2 *uvptr,int nvtx,
                    double a,double b,double c,double d)
{
  VERTEX3 *ptA,*ptB;
  VERTEX2 *uvA,*uvB;
  double sideA,sideB,dx,dy,dz,t;

  f_c = b_c = 0;
  ptA = vptr + nvtx-1;   ptB = vptr;
  uvA = uvptr + nvtx-1;  uvB = uvptr;
  sideA = a*(double)ptA->x + b*(double)ptA->y + c*(double)ptA->z + d;
  while (nvtx--) {
    sideB = a*(double)ptB->x + b*(double)ptB->y + c*(double)ptB->z + d;
    if (((sideA>=0.0)&&(sideB<0.0))||
        ((sideB>=0.0)&&(sideA<0.0))) {
      dx = (double)(ptB->x - ptA->x);
      dy = (double)(ptB->y - ptA->y);
      dz = (double)(ptB->z - ptA->z);
      t = (fabs(sideA) / (fabs(sideA) + fabs(sideB)));
      fpts[f_c].x = (FLOAT)((double)ptA->x + dx * t);
      fpts[f_c].y = (FLOAT)((double)ptA->y + dy * t);
      fpts[f_c].z = (FLOAT)((double)ptA->z + dz * t);
      bpts[b_c] = fpts[f_c];
      fuvs[f_c].x = (FLOAT)((double)uvA->x + (double)(uvB->x - uvA->x) * t);
      fuvs[f_c].y = (FLOAT)((double)uvA->y + (double)(uvB->y - uvA->y) * t);
      buvs[b_c] = fuvs[f_c];
      b_c++;  f_c++;
    }
    if (sideB>=0.0) {
      fpts[f_c] = *ptB;
      fuvs[f_c++] = *uvB;
    } else {
      bpts[b_c] = *ptB;
      buvs[b_c++] = *uvB;
    }
    ptA = ptB;  ptB++;
    uvA = uvB;  uvB++;
    sideA = sideB;
  }
  if (f_c<3) f_c = 0;
  if (b_c<3) b_c = 0;
}
