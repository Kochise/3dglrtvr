!!ARBfp1.0

ATTRIB ftex5 = fragment.texcoord[5];
ATTRIB ftex4 = fragment.texcoord[4];
ATTRIB ftex3 = fragment.texcoord[3];
ATTRIB ftex2 = fragment.texcoord[2];
ATTRIB ftex1 = fragment.texcoord[1];
ATTRIB ftex0 = fragment.texcoord[0];

OUTPUT oCol = result.color;

PARAM p0 = program.local[0];
PARAM p1 = program.local[1];

TEMP H0,H1,H2,H3,H4;

TEX H1, ftex1,texture[5],2D;	# detail normal map
TEX H0, ftex0,texture[3],CUBE;# normal map
ADD H0.xyz,H0,H1;		# add normals
SUB H0.xyz,H0,1.0;	# expand normal
			
MOV H3,ftex5; 		# fetch worldspace (tex3,4&5)
MOV H2,ftex4;
MOV H1,ftex3;

DP3 H4.z,H0,H3;		# transforme la normale dans le worldspace
DP3 H4.y,H0,H2;
DP3 H4.x,H0,H1;

MOV H2.z,H3.w;		# eye vector
MOV H2.y,H2.w;
MOV H2.x,H1.w;		

# Reflection vector = 2N(N.E)/(N.N) - E
MUL H3,H4,2.0;		# 2N
DP3 H0.x,H4,H4;		# N.N
DP3 H0.y,H4,H2;		# N.E
RCP H0.x,H0.x;		# 1/N.N
MUL H3,H3,H0.y;		# 2N * (N.E)
MAD H3,H3,H0.x,-H2;	# 2N(N.E) * 1/(N.N) -E

TEX H2, ftex2, texture[2], 2D;  	# detail 2 
TEX H1, ftex1, texture[1], 2D;	# detail 1 
TEX H0, ftex0, texture[0], CUBE; 	# surface color
TEX H3.x, H3, texture[4],CUBE;	# specular look-up with reflection vector

MUL H1,H2,H1;		# blend det 2 & det1

DP3_SAT H2.x,H4,p1;		# bump = N.L
MUL H2.x,H2.x,4.3;	# brightness
LG2 H2.x,H2.x;

MUL H0.xyz,H1,H0;		# blend det & color
MUL H3.x,H3.x,H0.w;	# specular map

MUL H1,p0,ftex1.w;	# fogcolor*fogluminance
MAD_SAT H0,H2.x,H0,H3.x;	# color*bump+spec

SUB H1,H1,H0;		# lrp(fog,surface)
MAD oCol,ftex2.w,H1,H0; 	

END
