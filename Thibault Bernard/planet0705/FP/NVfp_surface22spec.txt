!!FP1.0

TEX H1, f[TEX1],TEX5,2D;	# detail normal map
TEX H0, f[TEX0],TEX3,CUBE;	# normal map
ADDH H0.xyz,H0,H1;		# add normals
SUBH H0.xyz,H0,1.0; 	# expand normal

MOV H3,f[TEX5]; 		# fetch worldspace (tex3,4&5)
MOV H2,f[TEX4];
MOV H1,f[TEX3];

DP3H H4.z,H0,H3;		# transforme la normale dans le worldspace
DP3H H4.y,H0,H2;
DP3H H4.x,H0,H1;

MOV H2.z,H3.w;		# eye vector
MOV H2.y,H2.w;
MOV H2.x,H1.w;			

# Reflection vector = 2N(N.E)/(N.N) - E
MULX H3,H4,2.0;		# 2N
DP3X H0.x,H4,H4;		# N.N
DP3H H0.y,H4,H2;		# N.E
RCPH H0.x,H0.x;		# 1/N.N
MULH H3,H3,H0.y;		# 2N * (N.E)
MADH H3,H3,H0.x,-H2;	# 2N(N.E) * 1/(N.N) -E

TEX H2, f[TEX2], TEX2, 2D;  	# texture detail 2 
TEX H1, f[TEX1], TEX1, 2D;  	# texture detail 1 
TEX H0, f[TEX0], TEX0, CUBE; 	# surface color
TEX H3.x, H3, TEX4, CUBE;	# specular look-up with reflection vector

MULH H1,H2,H1;			# blend det 2 & det1

DP3H_SAT H2.x,H4,p[1];		# bump = N.L
MULH H2.x,H2.x,4.3;		# brightness
LG2H H2.x,H2.x;

MULH H0.xyz,H1,H0;		# blend det & color
MULH H3.x,H3.x,H0.w;		# specular map

MULH H1,p[0],f[TEX1].w;		# fogcolor*fogluminance
MADX_SAT H0,H2.x,H0,H3.x;		# color*bump+spec

SUBH H1,H1,H0;		# lrp(fog,surface)
MADH o[COLH],f[TEX2].w,H1,H0;

END